syntax = "proto3";

package coswap.swap;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "coswap/x/swap/types";

// Msg defines the Msg service.
service Msg {
  rpc MintCoins       (MsgMintCoins      ) returns (MsgMintCoinsResponse      );
  rpc DistributeCoins (MsgDistributeCoins) returns (MsgDistributeCoinsResponse);
  rpc AddLiquidity    (MsgAddLiquidity   ) returns (MsgAddLiquidityResponse   );
  rpc SwapCoin        (MsgSwapCoin       ) returns (MsgSwapCoinResponse       );
}
message MsgMintCoins {
           string                   admin  = 1;
  repeated cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message MsgMintCoinsResponse {}

message MsgDistributeCoins {
           string                   admin     = 1;
           string                   toAddress = 2;
  repeated cosmos.base.v1beta1.Coin amount    = 3 [(gogoproto.nullable) = false];
}

message MsgDistributeCoinsResponse {}

message MsgAddLiquidity {
  string                   creator = 1;
  cosmos.base.v1beta1.Coin tokenA  = 2 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin tokenB  = 3 [(gogoproto.nullable) = false];
}

message MsgAddLiquidityResponse {}

message MsgSwapCoin {
  string                   creator      = 1;
  cosmos.base.v1beta1.Coin amountIn     = 2 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin amountOutMin = 3 [(gogoproto.nullable) = false];
}

message MsgSwapCoinResponse {}

